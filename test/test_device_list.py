# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import empy
from empy.models.device_list import DeviceList  # noqa: E501
from empy.rest import ApiException

class TestDeviceList(unittest.TestCase):
    """DeviceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DeviceList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceList`
        """
        model = empy.models.device_list.DeviceList()  # noqa: E501
        if include_optional :
            return DeviceList(
                devices = [
                    {"ip_addresses":[{"address":"address","parent_block":{"netmask":"netmask","cidr":5,"href":"href","network":"network"},"created_at":"2000-01-23 04:56:07+00:00","enabled":True,"manageable":True,"network":"network","address_family":6,"public":True,"management":True,"netmask":"netmask","metro":null,"cidr":1,"href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","global_ip":True,"gateway":"gateway","assigned_to":{"href":"href"}},{"address":"address","parent_block":{"netmask":"netmask","cidr":5,"href":"href","network":"network"},"created_at":"2000-01-23 04:56:07+00:00","enabled":True,"manageable":True,"network":"network","address_family":6,"public":True,"management":True,"netmask":"netmask","metro":null,"cidr":1,"href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","global_ip":True,"gateway":"gateway","assigned_to":{"href":"href"}}],"iqn":"iqn","created_at":"2000-01-23 04:56:07+00:00","description":"description","project":null,"switch_uuid":"switch_uuid","bonding_mode":0,"provisioning_events":[{"interpolated":"interpolated","relationships":[{"href":"href"},{"href":"href"}],"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"state","body":"body","type":"type"},{"interpolated":"interpolated","relationships":[{"href":"href"},{"href":"href"}],"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"state","body":"body","type":"type"}],"network_ports":[{"native_virtual_network":{"vxlan":5,"metal_gateways":[{"gateway_address":"10.1.2.1/27","updated_at":"2000-01-23 04:56:07+00:00","vlan":1001,"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"ready"},{"gateway_address":"10.1.2.1/27","updated_at":"2000-01-23 04:56:07+00:00","vlan":1001,"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"ready"}],"metro_code":"metro_code","instances":[{"href":"href"},{"href":"href"}],"metro":{"href":"href"},"description":"description","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","facility":{"href":"href"},"assigned_to_virtual_circuit":True,"assigned_to":{"href":"href"}},"disbond_operation_supported":True,"data":{"bonded":True,"mac":"mac"},"name":"bond0","virtual_networks":[{"href":"href"},{"href":"href"}],"href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","type":"NetworkPort","network_type":"layer2-bonded","bond":{"name":"name","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91"}},{"native_virtual_network":{"vxlan":5,"metal_gateways":[{"gateway_address":"10.1.2.1/27","updated_at":"2000-01-23 04:56:07+00:00","vlan":1001,"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"ready"},{"gateway_address":"10.1.2.1/27","updated_at":"2000-01-23 04:56:07+00:00","vlan":1001,"created_at":"2000-01-23 04:56:07+00:00","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"ready"}],"metro_code":"metro_code","instances":[{"href":"href"},{"href":"href"}],"metro":{"href":"href"},"description":"description","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","facility":{"href":"href"},"assigned_to_virtual_circuit":True,"assigned_to":{"href":"href"}},"disbond_operation_supported":True,"data":{"bonded":True,"mac":"mac"},"name":"bond0","virtual_networks":[{"href":"href"},{"href":"href"}],"href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","type":"NetworkPort","network_type":"layer2-bonded","bond":{"name":"name","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91"}}],"userdata":"userdata","hostname":"hostname","updated_at":"2000-01-23 04:56:07+00:00","operating_system":{"distro":"distro","preinstallable":True,"licensed":True,"name":"name","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","provisionable_on":["provisionable_on","provisionable_on"],"version":"version","pricing":"{}","slug":"slug"},"billing_cycle":"billing_cycle","customdata":"{}","href":"href","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","state":"active","locked":True,"spot_price_max":3.6160767,"plan":{"legacy":True,"line":"baremetal","available_in_metros":[{"price":{"hour":1.23},"href":"href"},{"price":{"hour":1.23},"href":"href"}],"description":"description","available_in":[{"price":{"hour":1.23},"href":"href"},{"price":{"hour":1.23},"href":"href"}],"type":"standard","specs":{"features":{"txt":True,"uefi":True,"raid":True},"cpus":[{"count":2,"type":"type"},{"count":2,"type":"type"}],"drives":[{"size":"3.84TB","count":7,"type":"HDD","category":"boot"},{"size":"3.84TB","count":7,"type":"HDD","category":"boot"}],"nics":[{"count":2,"type":"1Gbps"},{"count":2,"type":"1Gbps"}]},"deployment_types":["on_demand","on_demand"],"name":"name","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91","class":"m3.large.x86","pricing":"{}","slug":"m3.large.x86"},"provisioning_percentage":9.301444,"image_url":"image_url","root_password":"root_password","volumes":[{"href":"href"},{"href":"href"}],"project_lite":null,"short_id":"short_id","termination_time":"2000-01-23 04:56:07+00:00","created_by":null,"tags":["tags","tags"],"hardware_reservation":{"href":"href"},"spot_instance":True,"ssh_keys":[{"href":"href"},{"href":"href"}],"metro":null,"always_pxe":True,"ipxe_script_url":"ipxe_script_url","facility":{"features":["baremetal","backend_transfer","global_ipv4"],"address":{"country":"country","address":"address","address2":"address2","city":"city","coordinates":{"latitude":"latitude","longitude":"longitude"},"state":"state","zip_code":"zip_code"},"code":"code","ip_ranges":["2604:1380::/36","147.75.192.0/21"],"metro":null,"name":"name","id":"046b6c7f-0b8a-43b9-b35d-6489e6daee91"},"actions":[{"name":"name","type":"type"},{"name":"name","type":"type"}],"user":"user"}
                    ], 
                meta = {"next":{"href":"href"},"total":0,"last":{"href":"href"},"self":{"href":"href"},"first":{"href":"href"}}, 
                href = ''
            )
        else :
            return DeviceList(
        )
        """

    def testDeviceList(self):
        """Test DeviceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
