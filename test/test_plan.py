# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import empy
from empy.models.plan import Plan  # noqa: E501
from empy.rest import ApiException

class TestPlan(unittest.TestCase):
    """Plan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Plan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Plan`
        """
        model = empy.models.plan.Plan()  # noqa: E501
        if include_optional :
            return Plan(
                available_in = [
                    {"price":{"hour":1.23},"href":"href"}
                    ], 
                available_in_metros = [
                    {"price":{"hour":1.23},"href":"href"}
                    ], 
                var_class = 'm3.large.x86', 
                description = '', 
                deployment_types = [
                    'on_demand'
                    ], 
                id = '', 
                legacy = True, 
                line = 'baremetal', 
                name = '', 
                pricing = None, 
                slug = 'm3.large.x86', 
                specs = {"features":{"txt":True,"uefi":True,"raid":True},"cpus":[{"count":2,"type":"type"},{"count":2,"type":"type"}],"drives":[{"size":"3.84TB","count":7,"type":"HDD","category":"boot"},{"size":"3.84TB","count":7,"type":"HDD","category":"boot"}],"nics":[{"count":2,"type":"1Gbps"},{"count":2,"type":"1Gbps"}]}, 
                type = 'standard', 
                href = ''
            )
        else :
            return Plan(
        )
        """

    def testPlan(self):
        """Test Plan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
